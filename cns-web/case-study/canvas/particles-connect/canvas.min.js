var resizeReset=function(){w=canvasBody.width=window.innerWidth;h=canvasBody.height=window.innerHeight};var canvasCountParticle=function(){if(innerWidth>1000){return 65}else{if(innerWidth>500){return 35}else{return 20}}};var opts={particleColor:"rgb(200,200,200)",lineColor:"rgb(200,200,200)",particleAmount:canvasCountParticle(),defaultSpeed:1,variantSpeed:1,defaultRadius:2,variantRadius:2,linkRadius:200,};window.addEventListener("resize",function(){deBouncer()});var deBouncer=function(){clearTimeout(tid);tid=setTimeout(function(){resizeReset()},delay)};var checkDistance=function(a,c,b,d){return Math.sqrt(Math.pow(b-a,2)+Math.pow(d-c,2))};var linkPoints=function(e,b){for(var c=0;c<b.length;c++){var a=checkDistance(e.x,e.y,b[c].x,b[c].y);var d=1-a/opts.linkRadius;if(d>0){drawArea.lineWidth=0.5;drawArea.strokeStyle="rgba("+rgb[0]+","+rgb[1]+","+rgb[2]+","+d+")";drawArea.beginPath();drawArea.moveTo(e.x,e.y);drawArea.lineTo(b[c].x,b[c].y);drawArea.closePath();drawArea.stroke()}}};Particle=function(a,b){this.x=Math.random()*w;this.y=Math.random()*h;this.speed=opts.defaultSpeed+Math.random()*opts.variantSpeed;this.directionAngle=Math.floor(Math.random()*360);this.color=opts.particleColor;this.radius=opts.defaultRadius+Math.random()*opts.variantRadius;this.vector={x:Math.cos(this.directionAngle)*this.speed,y:Math.sin(this.directionAngle)*this.speed};this.update=function(){this.border();this.x+=this.vector.x;this.y+=this.vector.y};this.border=function(){if(this.x>=w||this.x<=0){this.vector.x*=-1}if(this.y>=h||this.y<=0){this.vector.y*=-1}if(this.x>w){this.x=w}if(this.y>h){this.y=h}if(this.x<0){this.x=0}if(this.y<0){this.y=0}};this.draw=function(){drawArea.beginPath();drawArea.arc(this.x,this.y,this.radius,0,Math.PI*2);drawArea.closePath();drawArea.fillStyle=this.color;drawArea.fill()}};function setup(){particles=[];resizeReset();for(var a=0;a<opts.particleAmount;a++){particles.push(new Particle())}window.requestAnimationFrame(loop)}function loop(){window.requestAnimationFrame(loop);drawArea.clearRect(0,0,w,h);for(var a=0;a<particles.length;a++){particles[a].update();particles[a].draw()}for(var a=0;a<particles.length;a++){linkPoints(particles[a],particles)}}var canvasBody=document.getElementById("canvas"),drawArea=canvasBody.getContext("2d");var delay=200,tid,rgb=opts.lineColor.match(/\d+/g);resizeReset();setup();